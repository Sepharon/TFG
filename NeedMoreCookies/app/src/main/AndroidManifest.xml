<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="sersilinc.needmorecookies">

    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the 'MyLocation' functionality. 
    -->
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <permission
        android:name="sersilinc.needmorecookies.permission.MAPS_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="sersilinc.needmorecookies.MAPS_RECEIVE" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <!-- [START gcm_permission] -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <permission android:name="sersilinc.needmorecookies.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="sersilinc.needmorecookies.permission.C2D_MESSAGE" />
    <!-- [END gcm_permission] -->

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".Login"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="OPEN_LOGIN" />
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".MainActivity"
            android:label="@string/title_activity_main"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="broadcast_service" />
            </intent-filter>
        </activity>

        <service
            android:name=".Update_Server"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name=".Update_Android"
            android:enabled="true"
            android:exported="true"/>
        <activity
            android:name=".SettingsActivity"
            android:label="@string/title_activity_settings"
            android:theme="@style/PreferenceScreen" />
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing. android:name="com.google.android.geo.API_KEY"
             You can define the keys for the debug and release targets in src/debug/ and src/release/. 
        -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <meta-data
            android:name="com.google.android.maps.v2.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".MapsActivity"
            android:label="@string/title_activity_maps"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name=".Items"
            android:label="@string/title_activity_items"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="broadcast_service" />
            </intent-filter>
        </activity>
        <activity
            android:name=".About"
            android:label="@string/title_activity_about"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name=".ContactUs"
            android:label="@string/title_activity_contact_us"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name=".AddList"
            android:windowSoftInputMode="adjustPan"
            android:label="@string/title_activity_add_list"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name=".AddItem"
            android:label="@string/title_activity_add_item"
            android:windowSoftInputMode="adjustPan"
            android:theme="@style/AppTheme.NoActionBar" />

        <!-- [START gcm_receiver] -->
        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <category android:name="sersilinc.needmorecookies" />
            </intent-filter>
        </receiver>
        <!-- [END gcm_receiver] -->

        <!-- [START gcm_listener] -->
        <service
            android:name=".MyGcmListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>
        <!-- [END gcm_listener] -->
        <!-- [START instanceId_listener] -->
        <service
            android:name=".MyInstanceIDListenerService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID"/>
            </intent-filter>
        </service>
        <!-- [END instanceId_listener] -->
        <service
            android:name=".RegistrationIntentService"
            android:exported="false">
        </service>

    </application>

</manifest>